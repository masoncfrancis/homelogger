openapi: 3.0.0
info:
  version: 1.0.0
  title: Todo API
  description: A simple API to manage todos
paths:
  /todo:
    get:
      summary: Get all todos
      responses:
        '200':
          description: A list of todos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    label:
                      type: string
                      example: "Change water heater anode rod"
                    checked:
                      type: boolean
                      example: false
                    userID:
                      type: string
                      example: "675c831a85ac9204985b80c9"
  /todo/add:
    post:
      summary: Add a new todo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                  example: "Change water heater anode rod"
                userID:
                  type: string
                  example: "675c831a85ac9204985b80c9"
      responses:
        '201':
          description: Todo created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  label:
                    type: string
                    example: "Buy groceries"
  /todo/delete/{id}:
    delete:
      summary: Delete a todo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: int
            example: 1
      responses:
        '204':
          description: Todo deleted
  /todo/update/{id}:
    put:
      summary: Update a todo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: int
            example: 2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checked:
                  type: boolean
                  example: true
      responses:
        '200':
          description: Todo updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  checked:
                    type: boolean
                    example: true
  /appliances:
    get:
      summary: Get all appliances
      responses:
        '200':
          description: A list of appliances
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    makeModel:
                      type: string
                      example: "Samsung Washer"
                    yearPurchased:
                      type: string
                      example: "2020"
                    purchasePrice:
                      type: string
                      example: "500"
                    location:
                      type: string
                      example: "Laundry Room"
                    type:
                      type: string
                      example: "Washer"
  /appliances/{id}:
    get:
      summary: Get an appliance by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: An appliance object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  makeModel:
                    type: string
                    example: "Samsung Washer"
                  yearPurchased:
                    type: string
                    example: "2020"
                  purchasePrice:
                    type: string
                    example: "500"
                  location:
                    type: string
                    example: "Laundry Room"
                  type:
                    type: string
                    example: "Washer"
        '404':
          description: Appliance not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Appliance not found"
  /appliances/add:
    post:
      summary: Add a new appliance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                makeModel:
                  type: string
                  example: "Samsung Washer"
                yearPurchased:
                  type: string
                  example: "2020"
                purchasePrice:
                  type: string
                  example: "500"
                location:
                  type: string
                  example: "Laundry Room"
                type:
                  type: string
                  example: "Washer"
      responses:
        '201':
          description: Appliance created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  makeModel:
                    type: string
                    example: "Samsung Washer"
                  yearPurchased:
                    type: string
                    example: "2020"
                  purchasePrice:
                    type: string
                    example: "500"
                  location:
                    type: string
                    example: "Laundry Room"
                  type:
                    type: string
                    example: "Washer"
  /appliances/update/{id}:
    put:
      summary: Update an appliance
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                applianceName:
                  type: string
                  example: "Samsung Washer"
                manufacturer:
                  type: string
                  example: "Samsung"
                modelNumber:
                  type: string
                  example: "SW1234"
                serialNumber:
                  type: string
                  example: "SN123456789"
                yearPurchased:
                  type: string
                  example: "2020"
                purchasePrice:
                  type: string
                  example: "500"
                location:
                  type: string
                  example: "Laundry Room"
                type:
                  type: string
                  example: "Washer"
      responses:
        '200':
          description: Appliance updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  applianceName:
                    type: string
                    example: "Samsung Washer"
                  manufacturer:
                    type: string
                    example: "Samsung"
                  modelNumber:
                    type: string
                    example: "SW1234"
                  serialNumber:
                    type: string
                    example: "SN123456789"
                  yearPurchased:
                    type: string
                    example: "2020"
                  purchasePrice:
                    type: string
                    example: "500"
                  location:
                    type: string
                    example: "Laundry Room"
                  type:
                    type: string
                    example: "Washer"
        '404':
          description: Appliance not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Appliance not found"
  /appliances/delete/{id}:
    delete:
      summary: Delete an appliance
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: int
            example: 1
      responses:
        '200':
          description: Appliance deleted
  /maintenance:
    get:
      summary: Get all maintenance records
      parameters:
        - name: applianceId
          in: query
          required: true
          schema:
            type: integer
            example: 0
        - name: referenceType
          in: query
          required: true
          schema:
            type: string
            example: "Space"
        - name: spaceType
          in: query
          required: true
          schema:
            type: string
            example: "HVAC"
      responses:
        '200':
          description: A list of maintenance records
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    description:
                      type: string
                      example: "Replace air filter"
                    date:
                      type: string
                      example: "2023-10-01"
                    cost:
                      type: number
                      example: 100.0
                    notes:
                      type: string
                      example: "Changed filter in the living room"
                    spaceType:
                      type: string
                      example: "Living Room"
                    referenceType:
                      type: string
                      example: "Filter"
                    applianceID:
                      type: integer
                      example: 1
  /maintenance/add:
    post:
      summary: Add a new maintenance record
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: "Replace air filter"
                date:
                  type: string
                  example: "2023-10-01"
                cost:
                  type: number
                  example: 100.0
                notes:
                  type: string
                  example: "Changed filter in the living room"
                spaceType:
                  type: string
                  example: "Living Room"
                referenceType:
                  type: string
                  example: "Filter"
                applianceID:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Maintenance record created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  description:
                    type: string
                    example: "Replace air filter"
                  date:
                    type: string
                    example: "2023-10-01"
                  cost:
                    type: number
                    example: 100.0
                  notes:
                    type: string
                    example: "Changed filter in the living room"
                  spaceType:
                    type: string
                    example: "Living Room"
                  referenceType:
                    type: string
                    example: "Filter"
                  applianceID:
                    type: integer
                    example: 1
  /maintenance/{id}:
    get:
      summary: Get a maintenance record by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: A maintenance record object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  description:
                    type: string
                    example: "Replace air filter"
                  date:
                    type: string
                    example: "2023-10-01"
                  cost:
                    type: number
                    example: 100.0
                  notes:
                    type: string
                    example: "Changed filter in the living room"
                  spaceType:
                    type: string
                    example: "Living Room"
                  referenceType:
                    type: string
                    example: "Filter"
                  applianceID:
                    type: integer
                    example: 1
        '404':
          description: Maintenance record not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Maintenance record not found"
  /maintenance/delete/{id}:
    delete:
      summary: Delete a maintenance record
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Maintenance record deleted
  /repair:
    get:
      summary: Get all repair records
      parameters:
        - name: applianceId
          in: query
          required: true
          schema:
            type: integer
            example: 0
        - name: referenceType
          in: query
          required: true
          schema:
            type: string
            example: "Space"
        - name: spaceType
          in: query
          required: true
          schema:
            type: string
            example: "HVAC"
      responses:
        '200':
          description: A list of repair records
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    description:
                      type: string
                      example: "Replace motor"
                    date:
                      type: string
                      example: "2023-10-01"
                    cost:
                      type: number
                      example: 200.0
                    notes:
                      type: string
                      example: "Replaced motor in the washing machine"
                    spaceType:
                      type: string
                      example: "Laundry Room"
                    referenceType:
                      type: string
                      example: "Motor"
                    applianceID:
                      type: integer
                      example: 1
  /repair/add:
    post:
      summary: Add a new repair record
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: "Replace motor"
                date:
                  type: string
                  example: "2023-10-01"
                cost:
                  type: number
                  example: 200.0
                notes:
                  type: string
                  example: "Replaced motor in the washing machine"
                spaceType:
                  type: string
                  example: "Laundry Room"
                referenceType:
                  type: string
                  example: "Motor"
                applianceID:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Repair record created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  description:
                    type: string
                    example: "Replace motor"
                  date:
                    type: string
                    example: "2023-10-01"
                  cost:
                    type: number
                    example: 200.0
                  notes:
                    type: string
                    example: "Replaced motor in the washing machine"
                  spaceType:
                    type: string
                    example: "Laundry Room"
                  referenceType:
                    type: string
                    example: "Motor"
                  applianceID:
                    type: integer
                    example: 1
  /repair/{id}:
    get:
      summary: Get a repair record by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: A repair record object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  description:
                    type: string
                    example: "Replace motor"
                  date:
                    type: string
                    example: "2023-10-01"
                  cost:
                    type: number
                    example: 200.0
                  notes:
                    type: string
                    example: "Replaced motor in the washing machine"
                  spaceType:
                    type: string
                    example: "Laundry Room"
                  referenceType:
                    type: string
                    example: "Motor"
                  applianceID:
                    type: integer
                    example: 1
        '404':
          description: Repair record not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Repair record not found"
  /repair/delete/{id}:
    delete:
      summary: Delete a repair record
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Repair record deleted
  /files/upload:
    post:
      summary: Upload a new file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                userID:
                  type: string
                  example: "675c831a85ac9204985b80c9"
      responses:
        '201':
          description: File uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  originalName:
                    type: string
                    example: "file.txt"
                  userID:
                    type: string
                    example: "675c831a85ac9204985b80c9"
  /files/info/{id}:
    get:
      summary: Get an uploaded file by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: File retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  originalName:
                    type: string
                    example: "file.txt"
                  userID:
                    type: string
                    example: "675c831a85ac9204985b80c9"
        '404':
          description: File not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "File not found"
  /files/download/{id}:
    get:
      summary: Download a file by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: File downloaded
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          description: File not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "File not found"